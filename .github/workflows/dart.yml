# .github/workflows/release.yml

name: Build & Release App

on:
  push:
    branches:
      - main

jobs:
  #-------------------
  # WINDOWS BUILD JOB
  #-------------------
  build_windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Setup Flutter with latest stable version
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Enable Windows desktop support
        run: flutter config --enable-windows-desktop
      - name: Get Flutter dependencies
        run: flutter pub get
      - name: Build Windows
        run: flutter build windows --release
      - name: Archive Windows release artifacts
        run: Compress-Archive -Path build/windows/x64/runner/Release/* -DestinationPath Eauxiliary-Community-windows-x64.zip
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: Eauxiliary-Community-windows-x64.zip

  #----------------------------------------------------
  # ANDROID BUILD JOB
  #----------------------------------------------------
  build_android:
    name: Build Android (Multi-ABI)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Setup Flutter with latest stable version
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Set up Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26b
          link-to-sdk: true
          local-cache: true
      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.22.1'
      
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Get Flutter dependencies
        run: flutter pub get

      # 交叉编译
      - name: Build Android APKs (Split per ABI)
        run: flutter build apk --release --split-per-abi

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-release-apks
          path: build/app/outputs/flutter-apk/

  #-------------------------------------------
  # CREATE GITHUB RELEASE JOB
  #-------------------------------------------
  create_release:
    name: Create GitHub Release
    needs: [build_windows, build_android]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Get version from pubspec.yaml
        id: get_version
        run: |
          echo "version=$(grep 'version: ' pubspec.yaml | sed 's/version: //')" >> $GITHUB_OUTPUT
      - name: Create GitHub Release
        id: create_new_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          body: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-release
      
      - name: Download Android artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-release-apks

      # 上传 Windows 产物并重命名
      - name: Upload Windows Zip to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_new_release.outputs.upload_url }}
          asset_path: Eauxiliary-Community-windows-x64.zip
          asset_name: Eauxiliary-Community-windows-x64.zip
          asset_content_type: application/zip

      # 分别上传不同架构的 APK 并按格式重命名
      - name: Upload Android APK (arm64-v8a) to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_new_release.outputs.upload_url }}
          asset_path: app-arm64-v8a-release.apk
          asset_name: Eauxiliary-Community-android-arm64.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload Android APK (armeabi-v7a) to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_new_release.outputs.upload_url }}
          asset_path: app-armeabi-v7a-release.apk
          asset_name: Eauxiliary-Community-android-arm32.apk
          asset_content_type: application/vnd.android.package-archive
          
      - name: Upload Android APK (x86_64) to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_new_release.outputs.upload_url }}
          asset_path: app-x86_64-release.apk
          asset_name: Eauxiliary-Community-android-x64.apk
          asset_content_type: application/vnd.android.package-archive